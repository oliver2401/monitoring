{{- if and (eq .Values.clusterProvider "azure") (has .Values.clusterTier (list "dev")) (has .Values.clusterName (list "aks-dev1-alfa-eastus")) }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: replace-image-registry-artifactory-devx
  annotations:
    policies.kyverno.io/title: Replace Image Registry for Artifactory docker-live/docker-dev for DevX
    pod-policies.kyverno.io/autogen-controllers: none
    policies.kyverno.io/category: Registry
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      Docker cache registry
spec:
  webhookTimeoutSeconds: 20
  background: false
  failurePolicy: Ignore
  rules:
    - name: replace-image-registry-docker-containers-devx
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - azure-devops
              - jenkins
              - olexandrz
            operations:
              - CREATE
              #- UPDATE
      mutate:
        foreach:
        - list: "request.object.spec.containers"
          context:
          - name: cluster
            variable:
              value: {{ .Values.clusterName }}
          - name: clusterTier
            variable:
              value: {{ .Values.clusterTier }}
          - name: image
            imageRegistry: 
              reference: "{{`{{ regex_replace_all('(docker-dev|docker|docker-live)(.artifactory.dev.mycompany.com/)', '{{element.image}}', '${1}-proxy-sand-{{ cluster }}.aks.{{ clusterTier }}1.mycompany.com/' )}}`}}"
          - name: imagecheck
            variable:
              value: "{{`{{ image && image.configData && image.configData.architecture || 'empty' }}`}}"
          preconditions:
            all:
              - key: "{{`{{ imagecheck }}`}}"
                operator: NotEquals
                value: "empty"
          patchStrategicMerge:
            spec:
              imagePullSecrets:
              - name: docker-cache-registry-sand-docker-live-secrets
              - name: docker-cache-registry-sand-docker-dev-secrets
              - name: docker-cache-registry-sand-docker-secrets
              containers:
              - name: "{{`{{ element.name }}`}}"
                image: "{{`{{ regex_replace_all('(docker-dev|docker|docker-live)(.artifactory.dev.mycompany.com/)', '{{element.image}}', '${1}-proxy-sand-{{ cluster }}.aks.{{ clusterTier }}1.mycompany.com/' )}}`}}"
    - name: replace-image-registry-docker-initcontainers-devx
      match:
        any:
        - resources:
            kinds:
              - Pod
            namespaces:
              - azure-devops
              - jenkins
              - olexandrz
            operations:
              - CREATE
              #- UPDATE
      preconditions:
        all:
        - key: "{{ printf "{{ request.object.spec.initContainers[] || `%s` | length(@) }}" "[]" }}"
          operator: GreaterThanOrEquals
          value: 1
      mutate:
        foreach:
        - list: "request.object.spec.initContainers"
          context:
          - name: cluster
            variable:
              value: {{ .Values.clusterName }}
          - name: clusterTier
            variable:
              value: {{ .Values.clusterTier }}
          - name: image
            imageRegistry: 
              reference: "{{`{{ regex_replace_all('(docker-dev|docker|docker-live)(.artifactory.dev.mycompany.com/)', '{{element.image}}', '${1}-proxy-sand-{{ cluster }}.aks.{{ clusterTier }}1.mycompany.com/' )}}`}}"
          - name: imagecheck
            variable:
              value: "{{`{{ image && image.configData && image.configData.architecture || 'empty' }}`}}"
          preconditions:
            all:
              - key: "{{`{{ imagecheck }}`}}"
                operator: NotEquals
                value: "empty"
          patchStrategicMerge:
            spec:
              imagePullSecrets:
              - name: docker-cache-registry-sand-docker-live-secrets
              - name: docker-cache-registry-sand-docker-dev-secrets
              - name: docker-cache-registry-sand-docker-secrets
              initContainers:
              - name: "{{`{{ element.name }}`}}"
                image: "{{`{{ regex_replace_all('(docker-dev|docker|docker-live)(.artifactory.dev.mycompany.com/)', '{{element.image}}', '${1}-proxy-sand-{{ cluster }}.aks.{{ clusterTier }}1.mycompany.com/' )}}`}}"
{{- end }}
